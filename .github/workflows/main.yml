name: ecr push image

on:
  push:

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Auth AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: build and push docker image to ecr
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - uses: denoland/setup-deno@v1
        with:
          deno-version: '1.46.2'

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: npm build
        run: deno run -A ./scripts/build_npm.ts 0.1.0

      - name: Login to AWS CodeArtifact
        run: |
          aws codeartifact login --tool npm --repository test-deno-hono-schema --domain test-deno-hono-schema --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --region ap-northeast-1

      - name: npm publish
        run: |
          cd npm && npm publish