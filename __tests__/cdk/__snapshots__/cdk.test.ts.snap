export const snapshot = {};

snapshot[`Snapshot Test 1`] = `
{
  Parameters: {
    BootstrapVersion: {
      Default: "/cdk-bootstrap/hnb659fds/version",
      Description: "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      Type: "AWS::SSM::Parameter::Value<String>",
    },
  },
  Resources: {
    TestDenoHono495DCBBB: {
      DependsOn: [
        "TestDenoHonoRole5F2C8083",
      ],
      Properties: {
        Code: {
          ImageUri: {
            "Fn::Join": [
              "",
              [
                "123456789000.dkr.ecr.ap-northeast-1.",
                {
                  Ref: "AWS::URLSuffix",
                },
                "/test-deno-hono:latest",
              ],
            ],
          },
        },
        MemorySize: 512,
        PackageType: "Image",
        Role: {
          "Fn::GetAtt": [
            "TestDenoHonoRole5F2C8083",
            "Arn",
          ],
        },
        Timeout: 180,
      },
      Type: "AWS::Lambda::Function",
    },
    TestDenoHonoApiDefaultStage7F84252F: {
      Properties: {
        ApiId: {
          Ref: "TestDenoHonoApiF300FCC6",
        },
        AutoDeploy: true,
        StageName: "\$default",
      },
      Type: "AWS::ApiGatewayV2::Stage",
    },
    TestDenoHonoApiF300FCC6: {
      Properties: {
        Name: "TestDenoHonoApi",
        ProtocolType: "HTTP",
      },
      Type: "AWS::ApiGatewayV2::Api",
    },
    TestDenoHonoApiGET72A56996: {
      Properties: {
        ApiId: {
          Ref: "TestDenoHonoApiF300FCC6",
        },
        AuthorizationType: "NONE",
        RouteKey: "GET /",
        Target: {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                Ref: "TestDenoHonoApiGETTestDenoHonoApiIntegration556B8026",
              },
            ],
          ],
        },
      },
      Type: "AWS::ApiGatewayV2::Route",
    },
    TestDenoHonoApiGETTestDenoHonoApiIntegration556B8026: {
      Properties: {
        ApiId: {
          Ref: "TestDenoHonoApiF300FCC6",
        },
        IntegrationType: "AWS_PROXY",
        IntegrationUri: {
          "Fn::GetAtt": [
            "TestDenoHono495DCBBB",
            "Arn",
          ],
        },
        PayloadFormatVersion: "2.0",
      },
      Type: "AWS::ApiGatewayV2::Integration",
    },
    TestDenoHonoApiGETTestDenoHonoApiIntegrationPermission9674020C: {
      Properties: {
        Action: "lambda:InvokeFunction",
        FunctionName: {
          "Fn::GetAtt": [
            "TestDenoHono495DCBBB",
            "Arn",
          ],
        },
        Principal: "apigateway.amazonaws.com",
        SourceArn: {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                Ref: "AWS::Partition",
              },
              ":execute-api:",
              {
                Ref: "AWS::Region",
              },
              ":",
              {
                Ref: "AWS::AccountId",
              },
              ":",
              {
                Ref: "TestDenoHonoApiF300FCC6",
              },
              "/*/*/",
            ],
          ],
        },
      },
      Type: "AWS::Lambda::Permission",
    },
    TestDenoHonoRole5F2C8083: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: "sts:AssumeRole",
              Effect: "Allow",
              Principal: {
                Service: "lambda.amazonaws.com",
              },
            },
          ],
          Version: "2012-10-17",
        },
        ManagedPolicyArns: [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  Ref: "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      Type: "AWS::IAM::Role",
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    Ref: "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          AssertDescription: "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
